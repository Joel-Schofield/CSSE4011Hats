 for temp in range(1,201,2):
                        datax.append((int)(unpack("h",data[temp:(temp + 2)])[0]) - 5)
                    
                    print datax
                    a.clear()
                    a.plot(datax)
                    canvas.draw()

                    for temp in range(201,401,2):
                        datay.append((int)(unpack("h",data[temp:(temp + 2)])[0]) )

                    print datay
                    a.plot(datay)
                    canvas.draw()

                    for temp in range(401,601,2):
                        dataz.append((int)(unpack("h",data[temp:(temp + 2)])[0]) - 125)

                    print dataz
                    a.plot(dataz)
                    canvas.draw()

                    # calculate some gradiants here
                    # highest x, y and z
                    
                    for temp in range(0,90,10):
                        
                        # x components
                        if( ((datax[temp] - datax[temp+10])/(10)) > highgradx ):
                            highgradx = ((datax[temp] - datax[temp+10])/(10))
                        elif( ((datax[temp] - datax[temp+10])/(10)) < highgradx ):
                            highgradx = ((datax[temp] - datax[temp+10])/(10))
                            
                        # y components
                        if( ((datay[temp] - datay[temp+10])/(10)) > highgrady ):
                            highgrady = ((datay[temp] - datay[temp+10])/(10))
                        elif( ((datay[temp] - datay[temp+10])/(10)) < highgrady ):
                            highgrady = ((datay[temp] - datay[temp+10])/(10))   

                        # z compoenents
                        if( ((dataz[temp] - dataz[temp+10])/(10)) > highgradz ):
                            highgradz = ((dataz[temp] - dataz[temp+10])/(10))
                        elif( ((dataz[temp] - dataz[temp+10])/(10)) < highgradz ):
                            highgradz = ((dataz[temp] - dataz[temp+10])/(10))   

                    # print the highest changes in gradiant
                    
                    print "Grad x: " + highgradx
                    print "Grad y: " + highgrady
                    print "Grad z: " + highgradz

                    # depending on what game we want to do, it should start here,
                    # thread off, i belive



                    # delete the data after
                    del datax[:]
                    del datay[:]
                    del dataz[:]